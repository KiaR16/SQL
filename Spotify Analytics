-- Project: Spotify Data Analysis
-- Objective: Analyze Spotify data to uncover insights into popular tracks.
-- Key Steps:
--   1. Create a table for Spotify data.
--   2. Insert data from a Spotify CSV file into the table.
--   3. Perform various SQL queries to analyze the data.

-- Create the table for Spotify data
CREATE TABLE BIT_DB.Spotifydata (
    id integer PRIMARY KEY,
    artist_name varchar NOT NULL,
    track_name varchar NOT NULL,
    track_id varchar NOT NULL,
    popularity integer NOT NULL,
    danceability decimal(4,3) NOT NULL,
    energy decimal(4,3) NOT NULL,
    key integer NOT NULL,
    loudness decimal(5,3) NOT NULL,
    mode integer NOT NULL,
    speechiness decimal(5,4) NOT NULL,
    acousticness decimal(6,5) NOT NULL,
    instrumentalness text NOT NULL,
    liveness decimal(5,4) NOT NULL,
    valence decimal(4,3) NOT NULL,
    tempo decimal(6,3) NOT NULL,
    duration_ms integer NOT NULL,
    time_signature integer NOT NULL
);

-- Insert data from the Spotify CSV file into the table
-- (Data insertion step here - actual CSV data insertion code or command not included for brevity)

-- Perform SQL queries to analyze the data

-- 1. Determine the average danceability for the top 10 most popular songs
SELECT 
  track_name, 
  artist_name, 
  popularity,
  (SELECT AVG(danceability) FROM BIT_DB.Spotifydata) AS average_danceability
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

-- 2. Count the number of times Doja Cat appears in the dataset
SELECT COUNT(*) AS DojaCatAppearances
FROM BIT_DB.Spotifydata
WHERE artist_name ='Doja Cat';

-- 3. Identify the artist who released the longest song
SELECT artist_name, track_name, MAX(duration_ms) AS longest_duration
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name
ORDER BY longest_duration DESC
LIMIT 1;

