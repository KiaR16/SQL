#In this SQL, I am analyzing a database that contains multiple tables, to quantify statistical data related to customers and their orders.

#1. How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers AS cust
INNER JOIN BIT_DB.FebSales AS Feb
ON cust.order_id = Feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT MIN(price), Product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY price ASC LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT SUM(quantity) * price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY revenue DESC;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product

